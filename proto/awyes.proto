syntax = "proto3";

import "google/protobuf/struct.proto";

package awyes;

option go_package = "github.com/the-sage-group/awyes/proto";

// Node definition
message Node {
  string name = 1;
  string context = 2;
  int32 version = 3;
  string description = 4;
  google.protobuf.Struct parameters = 5;
  google.protobuf.Struct returns = 6;
}

// Flow definition
message Edge {
  string source = 1;
  string target = 2;
}

message Flow {
  string name = 1;
  string context = 2;
  int32 version = 3;
  string description = 4;
  repeated Node nodes = 5;
  repeated Edge edges = 6;
  google.protobuf.Struct parameters = 7;
}

// Event types for streaming execution updates
enum EventType {
  UNKNOWN = 0;
  LISTENING = 1;
  EXECUTING = 2;
  COMPLETED = 3;
  FAILED = 4;
}

// Event message for streaming execution updates
message Event {
  EventType type = 1;
  optional Node node = 2;
  optional string message = 3;
  optional string error = 4;
  int64 timestamp = 5;
}

// Request to register a new flow
message RegisterFlowRequest { Flow flow = 1; }
message RegisterFlowResponse { Flow flow = 1; }

// Request to register a new node
message RegisterNodeRequest { Node node = 1; }
message RegisterNodeResponse { Node node = 1; }

// Request to execute a flow
message ExecuteFlowRequest { Flow flow = 1; }
message ExecuteFlowResponse { Node node = 1; }

// Awyes definition
service Awyes {
  rpc RegisterFlow(RegisterFlowRequest) returns (RegisterFlowResponse) {}
  rpc ExecuteFlow(ExecuteFlowRequest) returns (stream ExecuteFlowResponse) {}
  rpc RegisterNode(RegisterNodeRequest) returns (RegisterNodeResponse) {}
  rpc RunAndWait(stream Event) returns (stream Event) {}
}