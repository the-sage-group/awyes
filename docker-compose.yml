services:
  awyes:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    restart: unless-stopped
    volumes:
      - .:/app
    networks:
      - awyes-net
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: awyes
      POSTGRES_PASSWORD: awyes
      POSTGRES_DB: awyes

  envoy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9901:9901"
    networks:
      - awyes-net
    depends_on:
      - awyes

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: awyes
      POSTGRES_PASSWORD: awyes
      POSTGRES_DB: awyes
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - awyes-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U awyes"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  awyes-net:
    driver: bridge

volumes:
  postgres_data:
